#!/usr/bin/perl -w

use Modern::Perl;
use LWP::Simple;

use threads;
use threads::shared;
use Thread::Queue;
use Thread::Semaphore;

use Site;

#my $manga = "One Piece";
my $manga = "Naruto";

my @manga = (
    "Naruto",
    "One Piece",
    "Historys Strongest Disciple Kenichi",
    "Beelzebub",
    "Bleach",
    "Hajime no Ippo",
    "Gamaran",
    "Detective Conan",
    "Vinland Saga",
    "Futari Ecchi",

    "Berserk",
    "Kekkaishi",
    "The Breaker",
);

my $t = time;
#manga_thread();
latest_manga (@manga);
my $passed = time() - $t;

my @parts = gmtime($passed);
my ($d, $h, $m, $s) = @parts[7, 2, 1, 0];
say $s;

sub latest_manga
{
    my @manga = @_;
    my @threads;

    for my $manga (@manga) {
        push (@threads, (threads->create(\&get_latest, $manga)));
    }

    while (scalar @threads) {
        my @not_done;
        for my $thr (@threads) {
            if ($thr->is_joinable) {
                my %info = $thr->join();
                if (useful (%info)) {
                    print_manga(%info);
                }
                else {
                    say "Couldn't find the manga: $manga";
                }
            }
            else {
                push (@not_done, $thr);
            }
        }
        @threads = @not_done;
        if (scalar @threads) { sleep 1 };
    }

    #for my $thr (threads->list()) {
        #$thr->detach();
    #}
}

sub show_latest
{
    my ($manga) = @_;
    my %info = get_latest($manga);
    if (useful (%info)) {
        print_manga(%info);
    }
    else {
        say "Couldn't find the manga: $manga";
    }
}

sub useful
{
    my %info = @_;
    return defined($info{"manga"}) &&
           defined($info{"link"}) &&
           defined($info{"chapter"});
}

sub get_latest
{
    my ($manga) = @_;

    my %info;
    my %ret;
    %ret = get_mangastream_info ($manga);
    if (useful (%ret)) {
        %info = %ret;
    }

    %ret = get_mangable_info ($manga);
    if (useful %ret) {
        if (!useful (%info) || $ret{"chapter"} > $ret{"chapter"}) {
            %info = %ret;
        }
    }

    return %info;
}

sub print_manga
{
    my (%info) = @_;

    say "---------------------------------------------------------";
    say $info{"manga"}, " ", $info{"chapter"}, " - ", $info{"title"};
    say $info{"link"};
    #say $info{"domain"};
    #say $info{"manga"};
    #say $info{"chapter"};
    #say $info{"title"};
    #say $info{"date"};
}

sub convert_url
{
    my ($url) = @_;
    $url = lc ($url);
    $url =~ s/\s/_/g;
    return $url;
}

sub get_mangastream_info
{
    my ($manga) = @_;

    my $site = Site::get "http://mangastream.com/manga";

    my %info;

    my $manga_url = convert_url ($manga);
    if ($site =~ /<a\shref="
                    (\/read\/$manga_url\/[^"]+) # (1) Link
                  ">
                    (\d+)                       # (2) Chapter
                    \s-\s
                    (.+?)                       # (3) Chapter title
                  <\/a>
                 /xsi)
    {
        my $link = "http://mangastream.com$1";
        my $chapter = $2;
        my $title = $3;

        $info{"link"} = $link;
        $info{"domain"} = "mangastream";
        $info{"manga"} = $manga;
        $info{"chapter"} = $chapter;
        $info{"title"} = $title;
    }
    else {
        #say "Failed to locate '$manga' at mangastream!";
    }

    return %info;
}

sub get_mangable_info
{
    my ($manga) = @_;
    my $manga_url = convert_url ($manga);

    my $site = Site::get "http://mangable.com/manga-list/";

    my %info;
    if ($site =~ /<a\s
                    href="
                       ([^"]+\/$manga_url\/[^"]+) # (1) Link
                    "\s+
                    title="
                       .*?
                       \s
                       (\d+)                    # (2) Chapter
                    "\s*
                  >
                 /xsi)
    {
        my $link = $1;
        my $chapter = $2;

        $info{"link"} = $link;
        $info{"domain"} = "mangastream";
        $info{"manga"} = $manga;
        $info{"chapter"} = $chapter;
        $info{"title"} = "";
    }
    else {
        #say "Failed to locate '$manga' at mangable!";
    }

    return %info;
}

sub get_mangable_info_old
{
    my ($manga) = @_;
    my $manga_url = convert_url ($manga);

    my $site = Site::get "http://mangable.com/$manga_url";

    my %info;
    if ($site =~ /<a\s
                    href="
                       ([^"]+\/$manga_url\/[^"]+) # (1) Link
                    "\s+
                    title="
                       .*?
                       \s
                       (\d+)                    # (2) Chapter
                    "\s*
                  >
                 /xsi)
    {
        my $link = $1;
        my $chapter = $2;

        $info{"link"} = $link;
        $info{"domain"} = "mangastream";
        $info{"manga"} = $manga;
        $info{"chapter"} = $chapter;
        $info{"title"} = "";
    }
    else {
        say "Failed to locate '$manga' at mangable!";
    }

    return %info;
}

sub get_month_num {
    my %months = (
        Jan => "01",
        Feb => "02",
        Mar => "03",
        Apr => "04",
        May => "05",
        Jun => "06",
        Jul => "07",
        Aug => "08",
        Sep => "09",
        Okt => "10",
        Nov => "11",
        Dec => "12",
    );
    return $months{$_[0]};
}

